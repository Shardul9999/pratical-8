#include &lt;iostream&gt;
using namespace std;

#define SIZE 5 

class Queue {
private:
int arr[SIZE];
int front, rear;

public:
Queue() {
front = -1;
rear = -1;
}

bool isEmpty() {
return (front == -1);
}

bool isFull() {
return (rear == SIZE - 1);
}


void enqueue(int value) {
if (isFull()) {
cout &lt;&lt; &quot;Queue is full! Cannot add more elements.&quot; &lt;&lt; endl;
} else {
if (front == -1) front = 0; // Set front to 0 if it&#39;s the first element
arr[++rear] = value;
cout &lt;&lt; &quot;Added &quot; &lt;&lt; value &lt;&lt; &quot; to the queue.&quot; &lt;&lt; endl;
}
}

void dequeue() {
if (isEmpty()) {
cout &lt;&lt; &quot;Queue is empty! Cannot delete elements.&quot; &lt;&lt; endl;
} else {
cout &lt;&lt; &quot;Deleted &quot; &lt;&lt; arr[front] &lt;&lt; &quot; from the queue.&quot; &lt;&lt; endl;
if (front == rear) {
// Reset queue if only one element was there
front = rear = -1;
} else {
front++;
}
}
}

void printQueue() {
if (isEmpty()) {
cout &lt;&lt; &quot;Queue is empty!&quot; &lt;&lt; endl;
} else {
cout &lt;&lt; &quot;Queue elements: &quot;;

for (int i = front; i &lt;= rear; i++) {
cout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;
}
cout &lt;&lt; endl;
}
}
};

int main() {
Queue q;
int choice, value;

do {

cout &lt;&lt; &quot;\n--- Queue Menu ---\n&quot;;
cout &lt;&lt; &quot;1. Add (Enqueue)\n&quot;;
cout &lt;&lt; &quot;2. Delete (Dequeue)\n&quot;;
cout &lt;&lt; &quot;3. Print Queue\n&quot;;
cout &lt;&lt; &quot;4. Exit\n&quot;;
cout &lt;&lt; &quot;Enter your choice: &quot;;
cin &gt;&gt; choice;


switch (choice) {
case 1:
cout &lt;&lt; &quot;Enter a value to add: &quot;;
cin &gt;&gt; value;
q.enqueue(value);
break;

case 2:
q.dequeue();
break;

case 3:
q.printQueue();
break;

case 4:
cout &lt;&lt; &quot;Exiting the program. Goodbye!&quot; &lt;&lt; endl;
break;

default:
cout &lt;&lt; &quot;Invalid choice! Please try again.&quot; &lt;&lt; endl;
}
} while (choice != 4);

return 0;
}